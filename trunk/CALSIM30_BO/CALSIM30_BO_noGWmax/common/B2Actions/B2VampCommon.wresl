/*
VAMP Export limits during the pulse period: Apr15-May15.

A. Munevar 10/19/2001.

J. Wilde 10/25/2001. Change to alternate between 1500 and 3000 cfs for hi flow criteria.
*/

!This portion of the code deals with EXPORT restrictions during the pulse period.

!This is a counter to keep track of alternating high pulse years
define PulseHidv {std kind 'counter' UNITS 'NONE'}
define PulseHi {
    case Firstyear {
        condition wateryear==1922
        value 3000.0}
    case OCT_MAR {
        condition month>=OCT .and. month<=MAR
        value 0. }
    case APRhi1 {
    condition month == APR .and. VAMP_reqdv[VAMP_AND_DO] > 5700.1 .and. int(PulseHidv(prevApr))==3000
        value 1500.0}
    case APRhi2 {
    condition month == APR .and. VAMP_reqdv[VAMP_AND_DO] > 5700.1 .and. int(PulseHidv(prevApr))==1500
        value 3000.0}
    case APRlo {
        condition month == APR
    value PulseHidv(prevApr)}
    case others  {
        condition always
        value 0.0}
        }
goal save_PulseHi {PulseHidv = PulseHi}

!define vern4 {alias C639[SJR_WQ2] kind 'test' units 'cfs'}

!define vern5 {alias C639[VAMP_AND_DO] kind 'test' units 'cfs'}

define PulseExpResdv {std kind 'export' UNITS 'CFS'}
define PulseExpRes {
    case OCT_MAR {
        condition month>=OCT .and. month<=MAR
        value 0. }
    case APRlo1 {
        condition month == APR .and. abs(VAMP_reqdv[VAMP_AND_DO] - 5700.0)<.1
        value 2250. }
    case APRlo2 {
        condition month == APR .and. VAMP_reqdv[VAMP_AND_DO]<5699.9
        value 1500. }
    case APRhi {
        condition month == APR .and. VAMP_reqdv[VAMP_AND_DO]>5700.1 .and. C639[SJR_WQ2] < 8600.  !Alternates PulseExpRes from 1500 to 3000 every high year.
        value PulseHi}
    case VernHi {
        condition month == APR .or. month == MAY .and. C639[SJR_WQ2] >= 8600.0
        value max(C639[SJR_WQ2]*0.5,3000.0) }
    case MAY {
        condition month == MAY
        value     PulseExpResdv(-1)}
    case others  {
        condition   always
        value       0.0}
}

goal save_PulseExpRes {PulseExpResdv = PulseExpRes}


define PulseVAMPExp {alias PulseExpRes kind 'export' units 'CFS' }

