/*
File Name: Yuba_MinFlows.wresl
CalSim 3.0  File for New Bullards Bar Dam and Lower Yuba River Operations

Purpose: Defines minimum instream flow requirements for a range of regulatory condition
CalSIm 3.0 uses flows established for the lower Yuba River Accord

*/

!**********************************************************        
!Calculation of Settlement Yuba River Index
!Define Water Year Index based on forecasted inflow to New Bullards Bar
!plus previous years carryover storage.

define YubaUnimpaired  {timeseries kind 'FLOW' units 'TAF'}
define BaseCarryover {value 234.0}
define Triggervalue  {value 0.0} /*{value 166.0}*/
define Index_Accorddv   {std kind 'INDEX' units 'TAF'}
define YrType_Accorddv  {std kind 'INDEX' units 'NONE'}

define EndPrevMONInflow {
    	case beginYR {
        	condition month == OCT .and. wateryear == bgnWY
        	value 0.0 }
	case otherwise {
		condition always  
		sum(i=prevOCT,-1,1) I_NBLDB(i) * cfs_taf(i) + C_NFY017(i) * cfs_taf(i) + C_CMT000(i) * cfs_taf(i)}
	}

define EndPrevMONInflowdv  {std kind 'FLOW' units 'TAF'}
goal set_EndPrevMONInflowdv {EndPrevMONInflowdv = EndPrevMONInflow}

define ForecastAPRtoJUL_YU {
	case forAPRtoJUL_YU {
		condition month == OCT
		sum(i=6,9,1) YubaUnimpaired(i)}
	case otherwise {
		condition always 
		value ForecastAPRtoJUL_YUdv(-1)}
	}
	
define ForecastAPRtoJUL_YUdv {std kind 'FLOW' units 'TAF'}
goal set_ForecastAPRtoJUL_YUdv {ForecastAPRtoJUL_YUdv = ForecastAPRtoJUL_YU}

define ForecastAPRtoJUL_NFY {
	case forAPRtoJUL_NFY {
		condition month == OCT
		sum(i=6,9,1) I_NFY029(i) * cfs_taf(i)}
	case otherwise {
		condition always 
		value ForecastAPRtoJUL_NFYdv(-1)}
	}
	
define ForecastAPRtoJUL_NFYdv {std kind 'FLOW' units 'TAF'}
goal set_ForecastAPRtoJUL_NFYdv {ForecastAPRtoJUL_NFYdv = ForecastAPRtoJUL_NFY}

define ForecastAUGandSEP_YU {
	case forAUGandSEP_YU {
		condition month == OCT
		sum(i=10,11,1) YubaUnimpaired(i)}
	case otherwise {
		condition always 
		value ForecastAUGandSEP_YUdv(-1)}
	}

define ForecastAUGandSEP_YUdv {std kind 'FLOW' units 'TAF'}
goal set_ForecastAUGandSEP_YUdv {ForecastAUGandSEP_YUdv = ForecastAUGandSEP_YU}

define FEBForecastInflow {		
    	case beginYR {
        	condition month <= JAN .and. wateryear == bgnWY
        	value 0.0 }
	case FEB {
		condition month == FEB
		value -2.146 + 14.24 * EndPrevMONInflow + 525.33 * YubaUnimpaired - 3.221 + 24.58 * EndPrevMONInflow + 547.87 * YubaUnimpaired(1) 
		- 30.416 + 14.13 * EndPrevMONInflow + 624.73 * ForecastAPRtoJUL_YU - 240.81 * ForecastAPRtoJUL_NFY + 15.93 * EndPrevMONInflow 
		+ 640.37 * ForecastAUGandSEP_YU}		
	case otherwise {
		condition always
		value FEBForecastInflowdv(-1) * 1000.0}
	}
	
define FEBForecastInflowdv {std kind 'FLOW' units 'TAF'}
goal set_FEBForecastInflowdv {FEBForecastInflowdv = FEBForecastInflow / 1000.0}

define MARForecastInflow {		
    	case beginYR {
        	condition month == OCT .and. wateryear == bgnWY
        	value 0.0 }
	case MAR {
		condition month == MAR
		value -23.495 + 5.96 * EndPrevMONInflow + 553.86 * YubaUnimpaired - 31.134 + 12.37 * EndPrevMONInflow + 621.62 * ForecastAPRtoJUL_YU 
		- 232.66 * ForecastAPRtoJUL_NFY + 14.73 * EndPrevMONInflow + 593.96 * ForecastAUGandSEP_YU}		
	case otherwise {
		condition always
		value MARForecastInflowdv(-1) * 1000.0}
	}
	
define MARForecastInflowdv {std kind 'FLOW' units 'TAF'}
goal set_MARForecastInflowdv {MARForecastInflowdv = MARForecastInflow / 1000.0}

define APRForecastInflow {		
    	case beginYR {
        	condition month == OCT .and. wateryear == bgnWY
        	value 0.0 }
	case APR {
		condition month == APR
		value -30.665 + 5.47 * EndPrevMONInflow + 613.32 * ForecastAPRtoJUL_YU - 196.23 * ForecastAPRtoJUL_NFY + 14.09 * EndPrevMONInflow + 
		532.41 * ForecastAUGandSEP_YU}		
	case otherwise {
		condition always
		value APRForecastInflowdv(-1) * 1000.0}
	}
	
define APRForecastInflowdv {std kind 'FLOW' units 'TAF'}
goal set_APRForecastInflowdv {APRForecastInflowdv = APRForecastInflow / 1000.0}

define MAYForecastInflow {		
    	case beginYR {
        	condition month == OCT .and. wateryear == bgnWY
        	value 0.0 }
	case MAY {
		condition month == MAY
		value -31.652 + 10.33 * EndPrevMONInflow + 616.45 * ForecastAPRtoJUL_YU - 223.53 * ForecastAPRtoJUL_NFY + 12.98 * EndPrevMONInflow + 
		500.71 * ForecastAUGandSEP_YU}		
	case otherwise {
		condition always
		value MAYForecastInflowdv(-1) * 1000.0}
	}
	
define MAYForecastInflowdv {std kind 'FLOW' units 'TAF'}
goal set_MAYForecastInflowdv {MAYForecastInflowdv = MAYForecastInflow / 1000.0}

!
!define AnnualInflow {
!	case    FEB {
!		condition month == APR
!		! Minimum flows downstream of diversion dams vary, this is an approximation
!       		sum(i=-6,5,1) I_NFY029(i)*cfs_taf(i)+I_NBLDB(i)*cfs_taf(i)+I_SLT009(i)*cfs_taf(i)+min(min(max(0., I_MFY013(i) - 50.),850.) + max(0., I_OGN005(i) - 10.),1100.)*cfs_taf(i)-D_SLT009_SCT000_SV(i)*cfs_taf(i)}
!        
!        case    otherwise {
!		condition always
!        	value 0.0}
!        }
        
define Index_Accord {
	case    FEB {
		condition month == FEB
       		value S_NBLDB(PREVSEP) - BaseCarryover + EndPrevMONInflow + FEBForecastInflow / 1000.0}
	case    MAR {
		condition month == MAR
       		value S_NBLDB(PREVSEP) - BaseCarryover + EndPrevMONInflow + MARForecastInflow / 1000.0}
	case    APR {
		condition month == APR
       		value S_NBLDB(PREVSEP) - BaseCarryover + EndPrevMONInflow + APRForecastInflow / 1000.0}
 	case    MAY {
		condition month == MAY
       		value S_NBLDB(PREVSEP) - BaseCarryover + EndPrevMONInflow + MAYForecastInflow / 1000.0}     
        case    otherwise {
		condition always
        	value Index_Accorddv(-1)}
        }
        
define Trigger {
	case lowcarryover {
		condition S_NBLDB(PrevSep) < TriggerValue + BaseCarryover
		value 6.0}
	case otherwise {
		condition always
        	value 0.0}
        }
        
goal set_Index_Accord {Index_Accorddv=Index_Accord}        
      
        
define YrType_Accord_Init {
	case index7 {
		condition Index_Accord < 500.0
		value 7.0}
	case index6 {
		condition Index_Accord < 693.0
		value 6.0}
	case index5 {
		condition Index_Accord < 820.0
		value 5.0}
	case index4 {
		condition Index_Accord < 920.0
		value 4.0}
	case index3 {
		condition Index_Accord < 1040.0
		value 3.0}
	case index2 {
		condition Index_Accord < 1400.0
		value 2.0 }
	case index1 {
		condition always
		value 1.0}
	}

       
define YrType_Accord {     
        case Oct_Jan {
		condition month >= OCT .and. month <= MAR
			value max(YrType_Accord_Init,Trigger) }
	case otherwise {
		condition always
		        value YrType_Accord_init}
        }
        
goal set_YrType_Accord {YrType_Accorddv=YrType_Accord}


!**********************************************************        
!Calculation of D1644 Yuba River Index

define Index_D1644dv   {std kind 'INDEX' units 'TAF'}
define YrType_D1644dv  {std kind 'INDEX' units 'NONE'}

define OctMarFlow {
       case APR {
       		condition month == APR
       		sum(i=-6,-1,1) YubaUnimpaired(i) }
       case Rest { 
       		condition always
       		value 0 }
        }

define AprJulFlow {
       case APR {
       		condition month == APR
       		sum(i=0,3,1) YubaUnimpaired(i) }
       case Rest { 
       		condition always
       		value 0 }
        }

define Index_D1644 {
	case APR {
	        condition month == APR
	       	value 0.2*min(1400.,Index_D1644dv(-1))+0.3*OctMarFlow+0.5*AprJulFlow }
	case Rest { 
	       	condition always
	       	value Index_D1644dv(-1) }
        }
 
goal set_Index_D1644LT {Index_D1644dv=Index_D1644}
 
define YrType_D1644 {
	case Wet {
         	condition Index_D1644 >=1230
         	value 1}
        case AN {
 	        condition Index_D1644 >=990
         	value 2}
        case BN {
 	        condition Index_D1644 >=790
         	value 3}
        case Dry {
 	        condition Index_D1644 >=630
         	value 4}
        case Crit {
 	        condition Index_D1644 >=540
         	value 5}
        case otherwise {
 		condition always
         	value 6}
        }
  
 goal set_YrType_D1644 {YrType_D1644dv=YrType_D1644}
 
 !**********************************************************        
 !Calculation of 1965 Index
 
 define Index_1965dv    {std kind 'INDEX' units 'TAF'}
 define YrType_1965dv   {std kind 'INDEX' units 'NONE'}
 
 define OctSepFlow {
        case APR {
        	condition month == APR
        	sum(i=-6,5,1) YubaUnimpaired(i) }
        case Rest { 
        	condition always
        	value 0 }
        }
        
define Av50yrUnimpaired {value 2337.}
  
define Index_1965 {
  	case APR {
  	        condition month == APR
  	       	value OctSepFlow/Av50yrUnimpaired }
  	case Rest { 
  	       	condition always
  	       	value Index_1965dv(-1) }
        }
        
goal set_Index_1965 {Index_1965dv=Index_1965}
  
define YrType_1965 {
   	case Wet {
           	condition Index_1965 >0.5
           	value 1}
        case AN {
   	        condition Index_1965 >=0.45
           	value 2}
        case BN {
   	        condition Index_1965 >=0.4
           	value 3}
        case otherwise {
   		condition always
           	value 4}
        }
    
goal set_YrType_1965 {YrType_1965dv=YrType_1965}
 
 
!**********************************************************        
   
define MinFlowCrit   {value 4} !Change this value for other standards
   
define wytype_YUBA {
   	case Agreement1965 {
           	condition MinFlowCrit == 1
           	value YrType_1965}
        case D1644Interim {
   	        condition MinFlowCrit == 2
           	value YrType_D1644}
        case D1644Longterm {
   	        condition MinFlowCrit == 3
           	value YrType_D1644}
        case otherwise {
   		condition always
           	value YrType_Accord}
        }
 
define wytype_YUBADV  {std KIND 'YTYPE' UNITS 'NONE'}    
goal set_wytype_YUBADV {wytype_YUBADV=wytype_YUBA}

!Marysville- MINFLOWDEFINITION
define MIF_YUB006 {
 	case Wet {
         	condition wytype_YUBA == 1
         	select Wet   from Yuba_LowerYubaMinflow where C_arc=230,standard = MinFlowCrit,month=month}
        case AN {
 	        condition wytype_YUBA == 2
         	select AN    from Yuba_LowerYubaMinflow where C_arc=230,standard = MinFlowCrit,month=month}
        case BN {
 	        condition wytype_YUBA == 3
         	select BN    from Yuba_LowerYubaMinflow where C_arc=230,standard = MinFlowCrit,month=month}
        case Dry {
 	        condition wytype_YUBA == 4
         	select Dry   from Yuba_LowerYubaMinflow where C_arc=230,standard = MinFlowCrit,month=month}
        case ModCrit {
 	        condition wytype_YUBA == 5 .AND. S_NBLDB(PREVSEP) < 450.
         	select ModCrit  from Yuba_LowerYubaMinflow where C_arc=230,standard = MinFlowCrit,month=month}
        case Crit {
 	        condition wytype_YUBA == 5
         	select Crit  from Yuba_LowerYubaMinflow where C_arc=230,standard = MinFlowCrit,month=month}
        case ECrit {
 	        condition wytype_YUBA == 6
         	select ECrit  from Yuba_LowerYubaMinflow where C_arc=230,standard = MinFlowCrit,month=month}
        case otherwise {
 		condition always
         	select Conf from Yuba_LowerYubaMinflow where C_arc=230,standard = MinFlowCrit,month=month}
        }
        	
define MIF_YUB006dv {std kind 'FLOW-MIN-INSTREAM' units 'CFS'}
goal set_MIF_YUB006dv {MIF_YUB006dv=MIF_YUB006}
 
!Smartsville- MINFLOWDEFINITION
define MIF_YUB024 {
 	case Wet {
         	condition wytype_YUBA == 1
         	select Wet   from Yuba_LowerYubaMinflow where C_arc=237,standard = MinFlowCrit,month=month}
        case AN {
 	        condition wytype_YUBA == 2
         	select AN    from Yuba_LowerYubaMinflow where C_arc=237,standard = MinFlowCrit,month=month}
        case BN {
 	        condition wytype_YUBA == 3
         	select BN    from Yuba_LowerYubaMinflow where C_arc=237,standard = MinFlowCrit,month=month}
        case Dry {
 	        condition wytype_YUBA == 4
         	select Dry   from Yuba_LowerYubaMinflow where C_arc=237,standard = MinFlowCrit,month=month}
        case Crit {
 	        condition wytype_YUBA == 5
         	select Crit  from Yuba_LowerYubaMinflow where C_arc=237,standard = MinFlowCrit,month=month}
        case ECrit {
 	        condition wytype_YUBA == 6
         	select ECrit  from Yuba_LowerYubaMinflow where C_arc=237,standard = MinFlowCrit,month=month}
        case otherwise {
 		condition always
         	select Conf from Yuba_LowerYubaMinflow where C_arc=237,standard = MinFlowCrit,month=month}
        }
 
define MIF_YUB024dv {std kind 'FLOW-MIN-INSTREAM' units 'CFS'}
goal set_MIF_YUB024dv {MIF_YUB024dv=MIF_YUB024}
 
goal meetYUB024min  {C_YUB024_MIF < MIF_YUB024} 
goal meetYUB006min  {C_YUB006_MIF < MIF_YUB006}

define ConfYrDGRpattern {select DPD_per_del from Daguerre_del_pattern where month=month}

define ConfYrDPD {alias D_YUB013_14_NA + D_YUB011_15N_NA2 + D_YUB011_15S_NA2 kind 'FLOW-DELIVERY' units 'CFS'}

define ConfYrDPDAdj {
	case Conf {
		condition wytype_YUBA == 7
		value ConfYrDGRpattern * 250 * taf_cfs}
	case otherwise {
		condition always 
		value 1.0*WRmon_YUB013_14_NA*taf_cfs + YCWA_Alloc[setup]*CLmon_YUB013_14_NA*taf_cfs +
		1.0*WRmon_YUB011_15N_NA2*taf_cfs + YCWA_Alloc[setup]*CLmon_YUB011_15N_NA2*taf_cfs + 
		1.0*WRmon_YUB011_15S_NA2*taf_cfs + YCWA_Alloc[setup]*CLmon_YUB011_15S_NA2*taf_cfs}
	}
	
goal setConfYrAdj {ConfYrDPD < ConfYrDPDAdj}
